package com.azure.storage.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.multipart.MultipartFile;

import com.azure.storage.service.StorageService;

@RestController
@RequestMapping("/storage")
public class StorageController {
	
	@Autowired
	StorageService storageService;
	
	@PostMapping("/container/create/{container_name}")
	public ResponseEntity createContainer(@PathVariable("container_name") String containerName) {
		return storageService.createContainer(containerName);
	}
	
	@PostMapping("/{container_name}/blob/upload")
	public ResponseEntity uploadBlob(@RequestParam("file") MultipartFile file,
			@PathVariable("container_name") String containerName) {
		return storageService.uploadBlob(file, containerName);
	}
	
	@GetMapping("/{container_name}/blob/lists")
	public ResponseEntity listBlobs(@PathVariable("container_name") String containerName) {
		return storageService.listBlobs(containerName);
	}
	
	@DeleteMapping("/delete/{containerName}")
	public ResponseEntity deleteContainer(@PathVariable("containerName") String containerName) {
		return storageService.deleteContainer(containerName);
	}
	
	@DeleteMapping("/delete/{containerName}/blob/{blobNmae}")
	public ResponseEntity deleteBlob(@PathVariable("containerName") String containerName,
			@PathVariable("blobName") String blobName) {
		
	}
	
	@PostMapping("/rest/container/create/{container_name}")
	public ResponseEntity createRestContainer(@PathVariable("container_name") String containerName) {
		
		return storageService.createRestContainer(containerName);
	}
	
	@PostMapping("/rest/{container_name}/blob/upload")
	public String uploadRestBlob(@PathVariable("container_name") String containerName,
			@RequestParam("file") MultipartFile file) {
		
		return "Rest uploaded";
	}
	
	@GetMapping("/rest/{container_name}/blob/lists")
	public String listRestBlobs(@PathVariable("container_name") String containerName) {
		
		return "Rest listed blobs";
	}

}
